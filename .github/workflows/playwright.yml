name: Playwright Tests
on:
  deployment_status:
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'deployment_status' && startsWith(github.event.deployment_status.environment, 'preview') && github.event.deployment_status.state == 'success' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm install -g pnpm && pnpm install
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run tests
        id: run_playwright_tests
        continue-on-error: true
        run: pnpm run test:e2e-ci
        env:
          UPLOADTHING_TOKEN: ${{ secrets.UPLOADTHING_TOKEN }}
          BASE_URL: ${{ github.event.deployment_status.environment_url }}
      - name: Debug deployment info
        if: steps.run_playwright_tests.outcome == 'failure'
        run: |
          echo "Ref: ${{ github.ref }}"
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      - name: Extract branch name
        if: steps.run_playwright_tests.outcome == 'failure'
        id: extract_branch
        run: |
          BRANCH_NAME="${{ github.event.deployment.ref }}"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Install Neon CLI
        if: steps.run_playwright_tests.outcome == 'failure'
        run: npm i -g neonctl@latest
      - name: Delete Neon branch if tests fail
        if: steps.run_playwright_tests.outcome == 'failure'
        run: neonctl branches delete feature/${{ steps.extract_branch.outputs.branch }} --project-id ${{ secrets.NEON_PROJECT_ID }}
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
